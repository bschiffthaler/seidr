# - Find CLP (includes and library)
# This module defines
#  CLP_INCLUDE_PATH
#  CLP_LIBRARIES
#  CLP_FOUND
# also defined, but not for general use are
#  CLP_LIBRARY, where to find the library.

if (NOT "$ENV{CLP_ROOT}" STREQUAL "")
  SET(CLP_CUSTOM_PATH $ENV{CLP_ROOT})
endif()

SET(CLP_LIBPATHS /usr/lib64 /usr/lib /usr/local/lib /lib /usr/lib/coin 
    /usr/local/lib/coin /lib/coin ${CLP_CUSTOM_PATH}/lib
)

SET(CLP_INCPATHS /usr/include/ /usr/local/include/ /include
    ${CLP_CUSTOM_PATH}/include /usr/include/clp /usr/local/include/clp 
    /include/clp ${CLP_CUSTOM_PATH}/include/clp /usr/include/coin 
    /usr/local/include/coin /include/coin ${CLP_CUSTOM_PATH}/include/coin
    /usr/include/clp/coin /usr/local/include/clp/coin /include/clp/coin 
    ${CLP_CUSTOM_PATH}/include/clp/coin /usr/include/coinutils/coin 
    /usr/local/include/coinutils/coin /include/coinutils/coin 
    ${CLP_CUSTOM_PATH}/include/coinutils/coin /usr/include/coinutils 
    /usr/local/include/coinutils /include/coinutils 
    ${CLP_CUSTOM_PATH}/include/coinutils
)

FIND_PATH(CLP_INCLUDE_DIR
  NAMES ClpSimplex.hpp ClpInterior.hpp CoinPackedMatrix.hpp ClpSolve.hpp
  PATHS ${CLP_INCPATHS}
)

FIND_PATH(COIN_INCLUDE_DIR 
  NAMES CoinPragma.hpp
  PATHS ${CLP_INCPATHS}
)

IF (CLP_REQUIRE_STATIC)
  SET(CLP_NAMES libClp.a)
  SET(CLPSOLVER_NAMES libClpSolver.a)
  SET(COINUTILS_NAMES libCoinUtils.a)
  # SET(COINASL_NAMES libcoinasl.a)
  # SET(COINGLPK_NAMES libcoinglpk.a)
  # SET(COINMUMPS_NAMES libcoinmumps.a)
  # SET(COINMETIS_NAMES libcoinmetis.a)
ELSE()
  SET(CLP_NAMES Clp)
  SET(CLPSOLVER_NAMES ClpSolver)
  SET(COINUTILS_NAMES CoinUtils)
ENDIF()

FIND_LIBRARY(CLP_LIBRARY
  NAMES ${CLP_NAMES}
  PATHS ${CLP_LIBPATHS}
)

FIND_LIBRARY(CLPSOLVER_LIBRARY
  NAMES ${CLPSOLVER_NAMES}
  PATHS ${CLP_LIBPATHS}
)

FIND_LIBRARY(COINUTILS_LIBRARY
  NAMES ${COINUTILS_NAMES}
  PATHS ${CLP_LIBPATHS}
)

IF (CLP_REQUIRE_STATIC)
  FIND_LIBRARY(COINASL_LIBRARY
    NAMES ${COINASL_NAMES}
    PATHS ${CLP_LIBPATHS}
  )

  FIND_LIBRARY(COINGLPK_LIBRARY
    NAMES ${COINGLPK_NAMES}
    PATHS ${CLP_LIBPATHS}
  )

  FIND_LIBRARY(COINMUMPS_LIBRARY
    NAMES ${COINMUMPS_NAMES}
    PATHS ${CLP_LIBPATHS}
  )

  FIND_LIBRARY(COINMETIS_LIBRARY
    NAMES ${COINMETIS_NAMES}
    PATHS ${CLP_LIBPATHS}
  )

  FIND_LIBRARY(GFORTRAN_LIBRARY
    NAMES ${GFORTRAN_NAMES}
    PATHS ${CLP_LIBPATHS}
  )

  FIND_LIBRARY(QUADMATH_LIBRARY
    NAMES ${QUADMATH_NAMES}
    PATHS ${CLP_LIBPATHS}
  )

  FIND_LIBRARY(GCC_LIBRARY
    NAMES ${GCC_NAMES}
    PATHS ${CLP_LIBPATHS}
  )
ENDIF()

IF (CLP_REQUIRE_STATIC)
  IF (CLP_LIBRARY AND CLPSOLVER_LIBRARY AND COINUTILS_LIBRARY AND 
      CLP_INCLUDE_DIR)
      SET(CLP_LIBRARIES ${CLP_LIBRARY} ${CLPSOLVER_LIBRARY} ${COINUTILS_LIBRARY})
      GET_FILENAME_COMPONENT(CLP_INCLUDE_PATH ${CLP_INCLUDE_DIR} DIRECTORY)
      GET_FILENAME_COMPONENT(COIN_INCLUDE_PATH ${COIN_INCLUDE_DIR} DIRECTORY)
      SET(CLP_FOUND "YES")
  ELSE ()
    SET(CLP_FOUND "NO")
  ENDIF ()
ELSE()
  IF (CLP_LIBRARY AND CLPSOLVER_LIBRARY AND COINUTILS_LIBRARY AND 
      CLP_INCLUDE_DIR AND COIN_INCLUDE_DIR)
      SET(CLP_LIBRARIES ${CLP_LIBRARY} ${CLPSOLVER_LIBRARY} ${COINUTILS_LIBRARY})
      GET_FILENAME_COMPONENT(CLP_INCLUDE_PATH ${CLP_INCLUDE_DIR} DIRECTORY)
      GET_FILENAME_COMPONENT(COIN_INCLUDE_PATH ${COIN_INCLUDE_DIR} DIRECTORY)
      SET(CLP_FOUND "YES")
  ELSE ()
    SET(CLP_FOUND "NO")
  ENDIF ()
ENDIF()


IF (CLP_FOUND)
   IF (NOT CLP_FIND_QUIETLY)
      MESSAGE(STATUS "Found CLP libraries: ${CLP_LIBRARIES}")
   ENDIF (NOT CLP_FIND_QUIETLY)
ELSE (CLP_FOUND)
   IF (CLP_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR "Could not find a CLP library")
   ENDIF (CLP_FIND_REQUIRED)
ENDIF (CLP_FOUND)

# Deprecated declarations.
SET (NATIVE_CLP_INCLUDE_PATH ${CLP_INCLUDE_PATH} )
GET_FILENAME_COMPONENT (NATIVE_CLP_LIB_PATH ${CLP_LIBRARY} PATH)

MARK_AS_ADVANCED(
  CLP_LIBRARY
  CLP_INCLUDE_DIR
  )
